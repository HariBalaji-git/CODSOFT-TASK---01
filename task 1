
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestClassifier

titanic_df = pd.read_csv('titanic.csv')


imputer = SimpleImputer(strategy='median')
titanic_df['Age'] = imputer.fit_transform(titanic_df[['Age']])
titanic_df['Embarked'].fillna(titanic_df['Embarked'].mode()[0], inplace=True)
titanic_df.drop(columns=['Cabin'], inplace=True)


label_encoder = LabelEncoder()
titanic_df['Sex'] = label_encoder.fit_transform(titanic_df['Sex'])
titanic_df['Embarked'] = label_encoder.fit_transform(titanic_df['Embarked'])


features = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']
X = titanic_df[features]  
y = titanic_df['Survived']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

def predict_survival():
    print("Enter the passenger details to predict survival:")
    
  
    pclass = int(input("Enter Passenger Class (1, 2, or 3): "))
    sex = input("Enter Sex (male or female): ").lower()
    sex = 0 if sex == 'male' else 1  # Convert to numerical
    age = float(input("Enter Age: "))
    sibsp = int(input("Enter number of Siblings/Spouses aboard: "))
    parch = int(input("Enter number of Parents/Children aboard: "))
    fare = float(input("Enter Fare: "))
    embarked = input("Enter Port of Embarkation (C, Q, or S): ").upper()
    embarked = 0 if embarked == 'S' else (1 if embarked == 'C' else 2)  # Convert to numerical
  
    input_data = pd.DataFrame({
        'Pclass': [pclass],
        'Sex': [sex],
        'Age': [age],
        'SibSp': [sibsp],
        'Parch': [parch],
        'Fare': [fare],
        'Embarked': [embarked]
    })
    
    prediction = model.predict(input_data)
    

    if prediction[0] == 1:
        print("\nThe passenger would have survived.")
    else:
        print("\nThe passenger would not have survived.")


predict_survival()
